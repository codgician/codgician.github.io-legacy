<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codgician</title>
    <link>https://codgician.me/zh-hans/</link>
    <description>Recent content on codgician</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sun, 10 May 2020 16:29:10 +0800</lastBuildDate>
    
	<atom:link href="https://codgician.me/zh-hans/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSAPP: Attack Lab</title>
      <link>https://codgician.me/zh-hans/posts/2020/05/csapp-attack-lab/</link>
      <pubDate>Sun, 10 May 2020 16:29:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2020/05/csapp-attack-lab/</guid>
      <description>实验内容 本实验是 CSAPP:3e 一书的配套实验之一，相关资料如下： 实验文件 实验要求 在本次实验中，我们将试着对给定的可在 Linux 下运行的二进制文件进行缓冲区溢出攻</description>
    </item>
    
    <item>
      <title>Church 编码学习笔记</title>
      <link>https://codgician.me/zh-hans/posts/2020/04/church-encoding/</link>
      <pubDate>Mon, 06 Apr 2020 12:19:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2020/04/church-encoding/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>浅谈置换群计数</title>
      <link>https://codgician.me/zh-hans/posts/2020/03/permutation-group/</link>
      <pubDate>Thu, 26 Mar 2020 18:28:27 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2020/03/permutation-group/</guid>
      <description>前言 群论基础 集合论基础 关系 等价关系 等价类 群论基础 群 子群 陪集 拉格朗日定理 置换、置换群 置换 轮换表示法 置换的幂运算 置换群 群在集合上的作用 轨道 稳定子</description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://codgician.me/zh-hans/icpc/templates/math/</link>
      <pubDate>Thu, 12 Dec 2019 20:29:35 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/icpc/templates/math/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>Offline Algorithms</title>
      <link>https://codgician.me/zh-hans/icpc/templates/offline-algorithms/</link>
      <pubDate>Mon, 18 Nov 2019 09:10:17 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/icpc/templates/offline-algorithms/</guid>
      <description>莫队算法 普通莫队 typedef struct _Query { int id, qLeftPt, qRightPt; } Query; Query qArr[SIZE]; int arr[SIZE], ans[SIZE], len, qNum, pos[SIZE]; int main() { /* Some code here... */ // Partition int blockSize = sqrt(len); for (int i = 0; i &amp;lt; len; i++) pos[i] = i / blockSize; // Sort sort(qArr + 0, qArr + qNum, [](const Query &amp;amp; fst, const Query &amp;amp; snd)</description>
    </item>
    
    <item>
      <title>Data Structure</title>
      <link>https://codgician.me/zh-hans/icpc/templates/data-structure/</link>
      <pubDate>Mon, 18 Nov 2019 09:07:21 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/icpc/templates/data-structure/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>Graph Theory</title>
      <link>https://codgician.me/zh-hans/icpc/templates/graph-theory/</link>
      <pubDate>Mon, 18 Nov 2019 09:02:35 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/icpc/templates/graph-theory/</guid>
      <description>最短路 Dijkstra long long int dist[VERTEX_SIZE]; bool vis[VERTEX_SIZE]; void dijkstra(int startPt) { for (int i = 0; i &amp;lt; vertexNum; i++) vis[i] = false, dist[i] = LLONG_MAX; priority_queue&amp;lt;pair&amp;lt;long long int, int&amp;gt; &amp;gt; pq; pq.push(make_pair(0, startPt)); dist[startPt] = 0; while (!pq.empty()) { int cntPt = pq.top().second; pq.pop(); if (vis[cntPt]) continue; vis[cntPt] = true; for (int i = head[cntPt]; i != -1; i = edges[i].next) { int nextPt = edges[i].to;</description>
    </item>
    
    <item>
      <title>Hello World... Again!</title>
      <link>https://codgician.me/zh-hans/posts/2019/10/hello-world/</link>
      <pubDate>Tue, 15 Oct 2019 14:28:28 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2019/10/hello-world/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>浅谈 Min25 筛</title>
      <link>https://codgician.me/zh-hans/posts/2019/09/min25-sieve/</link>
      <pubDate>Sun, 01 Sep 2019 13:07:42 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2019/09/min25-sieve/</guid>
      <description>前言 Min25 筛 核心思想 筛素数答案 筛非质数答案 应用 模板 类积性函数？ 带条件的前缀和？ 前缀积？ 小结 前言 Min25 筛是一种对于满足特定条件积性函数的前缀和的亚线性</description>
    </item>
    
    <item>
      <title>数论函数与狄利克雷卷积</title>
      <link>https://codgician.me/zh-hans/posts/2019/08/arithmetic-function-and-dirichlet-convolution/</link>
      <pubDate>Tue, 06 Aug 2019 13:18:39 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2019/08/arithmetic-function-and-dirichlet-convolution/</guid>
      <description>简介 狄利克雷卷积 定义 构造一个环 有趣的性质 再谈莫比乌斯反演？ 杜教筛 构造？ 应用 %%% 简介 本文先从狄利克雷卷积讲起，然后会简要介绍一种基于这一理论的有</description>
    </item>
    
    <item>
      <title>浅谈离线分治算法</title>
      <link>https://codgician.me/zh-hans/posts/2019/07/offline-divide-and-conquer/</link>
      <pubDate>Mon, 22 Jul 2019 20:25:56 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2019/07/offline-divide-and-conquer/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>Luogu P3943: 星空</title>
      <link>https://codgician.me/zh-hans/posts/2019/02/luogu-p3943/</link>
      <pubDate>Tue, 05 Feb 2019 11:20:57 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2019/02/luogu-p3943/</guid>
      <description>题面 现有一个长度为 $n$ 的灯泡序列，其中 $k$ 个位置上的灯泡是熄灭的，其余的是点亮的。我们可以进行 $m$ 种操作，而第 $i$ 种操作是选定任意长度为 $b_i$ 的连续灯泡</description>
    </item>
    
    <item>
      <title>ICPC 2018 亚洲区域赛北京站游记</title>
      <link>https://codgician.me/zh-hans/posts/2018/11/icpc-2018-asia-beijing-regional-travel-notes/</link>
      <pubDate>Mon, 26 Nov 2018 22:58:00 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/11/icpc-2018-asia-beijing-regional-travel-notes/</guid>
      <description>Day 0 早早地到达了高铁站…… 北京之行时长竟然有 $4$ 天，真是令人感到舒适…… 前面几天一直在瞎搞各种线段树，包括什么势能线段树 (aka 吉司机线段树)、多 tag</description>
    </item>
    
    <item>
      <title>HDUOJ 4947: GCD Array</title>
      <link>https://codgician.me/zh-hans/posts/2018/11/hduoj-4947/</link>
      <pubDate>Sat, 24 Nov 2018 23:52:32 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/11/hduoj-4947/</guid>
      <description>题面 分析 %%% 题面 对于长度为 \(l\) 且初始全为 \(0\) 的序列 \(a\)（下标 \(1 \sim l\)），有 \(q\) 次操作。操作分为两种： 给定 \(n, d, v\)，对于每个满足 \(\gcd(x, n) = d\) 的 \</description>
    </item>
    
    <item>
      <title>Luogu P1829: Crash 的数字表格</title>
      <link>https://codgician.me/zh-hans/posts/2018/11/luogu-p1829/</link>
      <pubDate>Wed, 21 Nov 2018 19:15:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/11/luogu-p1829/</guid>
      <description>题面 给定 \(n, m\)，试求： \[ \sum\limits_{i = 1}^{n} \sum\limits_{j = 1}^{m} \operatorname{lcm}(i, j) \] 答案对 \(20101009\) 取模。 数据范围：\(1 \le n,m \le 10^7\) 题目链接：Luogu P1829: Crash 的数字表格 分析 显然我们需要往莫比乌</description>
    </item>
    
    <item>
      <title>浅谈莫比乌斯反演</title>
      <link>https://codgician.me/zh-hans/posts/2018/11/mobius-inversion-formula/</link>
      <pubDate>Sun, 18 Nov 2018 13:07:42 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/11/mobius-inversion-formula/</guid>
      <description>简介 莫比乌斯函数 定义 性质 莫比乌斯反演 形式 #1 内容 证明 形式 #2 内容 证明 应用 与欧拉函数联系 与最大公约数联系 %%% 简介 最近经常演人/被人演，所以是时候学一</description>
    </item>
    
    <item>
      <title>BZOJ 2187: fraction</title>
      <link>https://codgician.me/zh-hans/posts/2018/10/bzoj-2187/</link>
      <pubDate>Sun, 28 Oct 2018 22:30:27 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/10/bzoj-2187/</guid>
      <description>题面 分析 题面 给定四个正整数 \(a, b, c, d\)，试求最简正分数 \(\frac{p}{q}\)，满足： \[ \frac{a}{b} &amp;lt; \frac{p}{q} &amp;lt; \frac{c}{d} \] 若有多组解，取 \(q\) 最小的一组解；若仍</description>
    </item>
    
    <item>
      <title>BZOJ 3817: Sum</title>
      <link>https://codgician.me/zh-hans/posts/2018/10/bzoj-3817/</link>
      <pubDate>Sun, 28 Oct 2018 13:27:56 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/10/bzoj-3817/</guid>
      <description>题面 分析 %%% 题面 给定正整数 \(n, r\)，试求： \[ \sum\limits_{d = 1}^{n} (-1)^{\left\lfloor \sqrt{d \cdot r \cdot d} \right\rfloor} \] 数据范围：\(n \le 10^9, \ r \le 10^4\)，测试数据组数 \(T \le 10^4\)。 题目链</description>
    </item>
    
    <item>
      <title>HDUOJ 6275: Mod, Xor and Everything</title>
      <link>https://codgician.me/zh-hans/posts/2018/10/hduoj-6275/</link>
      <pubDate>Thu, 25 Oct 2018 18:10:23 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/10/hduoj-6275/</guid>
      <description>题面 分析 %%% 题面 对于给定的 \(n\)，计算： \[ (n \bmod 1) \oplus (n \bmod 2) \oplus \dots \oplus [n \bmod (n - 1)] \] 其中 \(\oplus\) 表示按位异或。 数据范围： \(n \le 10^{12}\) 题面链接：CCPC2018 Hangzhou</description>
    </item>
    
    <item>
      <title>浅谈类欧几里德算法</title>
      <link>https://codgician.me/zh-hans/posts/2018/10/quasi-euclidean-algorithm/</link>
      <pubDate>Thu, 18 Oct 2018 22:54:39 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/10/quasi-euclidean-algorithm/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>ICPC 2018 亚洲区域赛南京站游记</title>
      <link>https://codgician.me/zh-hans/posts/2018/10/icpc-2018-asia-nanjing-regional-travel-notes/</link>
      <pubDate>Tue, 16 Oct 2018 22:50:35 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/10/icpc-2018-asia-nanjing-regional-travel-notes/</guid>
      <description>Day 0 国庆六场模拟赛场场自闭，导致比赛前一周状态不佳。抱着打铁的心态随便整理了一下模板。本来打算当天就整理好并打出来的结果转念一想去南航找复印</description>
    </item>
    
    <item>
      <title>HDUOJ 6434: Count</title>
      <link>https://codgician.me/zh-hans/posts/2018/08/hduoj-6434/</link>
      <pubDate>Thu, 23 Aug 2018 13:53:46 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/08/hduoj-6434/</guid>
      <description>题面 分析 题面 本题有 \(T\) 个询问，对于每个询问 \(n\)，你需要计算： \[ \sum\limits_{i = 1}^{n} \sum\limits_{j = 1}^{i - 1} \left[ \gcd(i + j, i - j) = 1 \right] \] 数据范围：\(1 \le T \le 10^5, 1 \le n \le 2 \times</description>
    </item>
    
    <item>
      <title>HDUOJ 6372: sacul</title>
      <link>https://codgician.me/zh-hans/posts/2018/08/hduoj-6372/</link>
      <pubDate>Fri, 10 Aug 2018 16:02:23 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/08/hduoj-6372/</guid>
      <description>题面 分析 %%% 题面 某巨犇发现了一种叫做海绵宝宝 \(\text{HMBB}\) 的神奇矩阵。 给定 \(i\)，记 \(p\) 是第 \(i\) 个质数。 矩阵 \(\text{HMBB}_{n}\) 的大小为 \(p^n \times p^n\)，同时： \[ \text{HMBB}_{n}[i][j] = \begin{cases} 0 &amp;amp; \binom{i}{j}</description>
    </item>
    
    <item>
      <title>浅谈无旋转 Treap</title>
      <link>https://codgician.me/zh-hans/posts/2018/07/treap-without-rotations/</link>
      <pubDate>Sat, 28 Jul 2018 15:15:01 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/07/treap-without-rotations/</guid>
      <description>简介 Treap = Tree + Heap。Treap 是一种弱平衡的二叉搜索树。 相较普通的二叉搜索树，平衡二叉树与之最显著的区别就是后者是 “平衡的”，即采取了一些</description>
    </item>
    
    <item>
      <title>CCPC 2018 湘潭邀请赛游记</title>
      <link>https://codgician.me/zh-hans/posts/2018/05/ccpc-2018-xiangtan-travel-notes/</link>
      <pubDate>Wed, 16 May 2018 13:19:35 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/05/ccpc-2018-xiangtan-travel-notes/</guid>
      <description>Day 0 打印了 Claris 巨佬的模板（虽然看不懂），顺便打印了几个自己整理的常用模板（然而最后全都没用上）。 下午收拾东西，不知道哪里一抽就把小黄兔和蛤乐器</description>
    </item>
    
    <item>
      <title>CCPC 2018 湘潭邀请赛游记</title>
      <link>https://codgician.me/zh-hans/posts/2018/05/ccpc-2018-xiangtan-travel-notes/</link>
      <pubDate>Wed, 16 May 2018 13:19:35 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/05/ccpc-2018-xiangtan-travel-notes/</guid>
      <description>Day 0 打印了 Claris 巨佬的模板（虽然看不懂），顺便打印了几个自己整理的常用模板（然而最后全都没用上）。 下午收拾东西，不知道哪里一抽就把小黄兔和蛤乐器</description>
    </item>
    
    <item>
      <title>浅谈匈牙利算法</title>
      <link>https://codgician.me/zh-hans/posts/2018/03/hungarian-algorithm/</link>
      <pubDate>Fri, 09 Mar 2018 12:52:01 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2018/03/hungarian-algorithm/</guid>
      <description>pre code.sourceCode { white-space: pre; position: relative; } pre code.sourceCode span { display: inline-block; line-height: 1.25; } pre code.sourceCode span:empty { height: 1.2em; } code.sourceCode span { color: inherit; text-decoration: inherit; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { pre code.sourceCode { white-space: pre-wrap; } pre code.sourceCode span { text-indent: -5em; padding-left: 5em; }</description>
    </item>
    
    <item>
      <title>计算导论: 计算系统基本思维</title>
      <link>https://codgician.me/zh-hans/posts/2017/08/basics-on-computational-thinking/</link>
      <pubDate>Sat, 19 Aug 2017 23:03:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2017/08/basics-on-computational-thinking/</guid>
      <description>前言 逻辑运算 基本逻辑运算 “与”运算 AND：逻辑乘法 “或”运算 OR：逻辑加法 “非”运算 NOT：逻辑否定 复合逻辑运算 “与非”运算 NAND “或非”运算 NOR</description>
    </item>
    
    <item>
      <title>乱谈整型与浮点</title>
      <link>https://codgician.me/zh-hans/posts/2017/08/on-int-and-float/</link>
      <pubDate>Fri, 18 Aug 2017 22:43:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2017/08/on-int-and-float/</guid>
      <description>前言 前几天好友终于也入了 C/C++ 的邪教，问起了几个浮点相关的问题，让我终于意识到深陷现代语言泥潭的我早已忘却这些富有趣味但又基础地不能在基础的知识</description>
    </item>
    
    <item>
      <title>高考导数: 洛必达法则</title>
      <link>https://codgician.me/zh-hans/posts/2017/04/thoughts-on-senior-3-derivative-problems-3/</link>
      <pubDate>Sat, 08 Apr 2017 20:26:59 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2017/04/thoughts-on-senior-3-derivative-problems-3/</guid>
      <description>简介 法则内容 例题赏析 小结 参考文献 简介 分离参数可谓是解决高考导数题目中极为常见的一种基本方法，但很多时候我们却会遇到端点处取值没有意义的情况。</description>
    </item>
    
    <item>
      <title>高考导数: 优化函数以方便求解</title>
      <link>https://codgician.me/zh-hans/posts/2017/04/thoughts-on-senior-3-derivative-problems-2/</link>
      <pubDate>Sat, 08 Apr 2017 20:21:50 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2017/04/thoughts-on-senior-3-derivative-problems-2/</guid>
      <description>简介 真·简介 指数型 (\(e^x\)) 对数型 (\(\ln x\)) 既有对数又有指数？ 小结 参考文献 简介 在进入正题前总是忍不住想先扯点其它的…… 前几周经不住诱惑购入了蔡小雄先生所著</description>
    </item>
    
    <item>
      <title>高考导数: “两点”问题</title>
      <link>https://codgician.me/zh-hans/posts/2017/03/thoughts-on-senior-3-derivative-problems-1/</link>
      <pubDate>Tue, 21 Mar 2017 16:32:10 +0800</pubDate>
      
      <guid>https://codgician.me/zh-hans/posts/2017/03/thoughts-on-senior-3-derivative-problems-1/</guid>
      <description>简介 构造新变量 利用零点、极值的定义 利用韦达定理 直接构造新变量 消去旧变量 利用函数单调性 利用新函数的单调性 利用旧函数的单调性 利用韦达定理 小结 4/02 更</description>
    </item>
    
  </channel>
</rss>